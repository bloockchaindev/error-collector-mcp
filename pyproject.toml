[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "error-collector-mcp"
version = "0.1.0"
description = "A Model Context Protocol server for intelligent error collection and summarization"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Error Collector MCP Contributors"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "fastmcp>=0.1.0",
    "openai>=1.0.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.11.0",
    "watchdog>=3.0.0",
    "psutil>=5.9.0",
    "websockets>=11.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/error-collector-mcp"
Repository = "https://github.com/yourusername/error-collector-mcp"
Issues = "https://github.com/yourusername/error-collector-mcp/issues"
Documentation = "https://github.com/yourusername/error-collector-mcp#readme"
Changelog = "https://github.com/yourusername/error-collector-mcp/blob/main/CHANGELOG.md"

[project.scripts]
error-collector-mcp = "error_collector_mcp.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["error_collector_mcp*"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=error_collector_mcp --cov-report=html --cov-report=term-missing"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["error_collector_mcp"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]